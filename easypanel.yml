version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: gestaSaaS
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 2084b5fb1f7fd997a2b0
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - database_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d gestaSaaS"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://gestasaas:${POSTGRES_PASSWORD}@database:5432/gestasaas_db
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - ENVIRONMENT=production
      - DEBUG=false
      - HOST=0.0.0.0
      - PORT=3001
      - CORS_ORIGINS=https://app.fluxvision.cloud,https://api.fluxvision.cloud
      - LOG_LEVEL=info
    ports:
      - "3001:3001"
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - REACT_APP_API_URL=https://api.fluxvision.cloud/api
      - REACT_APP_ENVIRONMENT=production
      - REACT_APP_NAME=gestaSaaS
      - REACT_APP_VERSION=1.0.0
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  database_data:
    driver: local