version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17
    container_name: gestasaas_postgres
    environment:
      POSTGRES_DB: app_gesta_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 2084b5fb1f7fd997a2b0
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../database/estrutura_completa_atualizada.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ../database:/backup
    ports:
      - "5432:5432"
    networks:
      - backend_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d app_gesta_db"]
      interval: 30s
      timeout: 30s
      retries: 5

  # Backend API
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DB_HOST=aplicacao_gesta_db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=2084b5fb1f7fd997a2b0
      - DB_NAME=app_gesta_db
      - SECRET_KEY="c2313d23d8088f167e09f5d77ca1598ba6e5893b7a6080f9fcc926dcf284a095"
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - ENVIRONMENT=production
      - DEBUG=false
      - HOST=0.0.0.0
      - PORT=3001
      - CORS_ORIGINS=https://app.fluxvision.cloud,https://api.fluxvision.cloud
      - LOG_LEVEL=info
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend_network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 120s

volumes:
  postgres_data:
    driver: local

networks:
  backend_network:
    driver: bridge
